"""Added new table

Revision ID: d12a3250a04c
Revises: 44d252461ab9
Create Date: 2023-06-05 16:34:57.871351

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd12a3250a04c'
down_revision = '44d252461ab9'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m_accounts',
    sa.Column('account_id', sa.Integer(), nullable=False, comment='アカウントID'),
    sa.Column('account_cd', sa.String(length=100), nullable=True, comment='アカウントコード:社員番号など利用企業のIDやコードのため'),
    sa.Column('ext_account_id', sa.Integer(), nullable=True, comment='外部アカウントID:cognitoなどの外部認証サービスと連携する場合は設定'),
    sa.Column('account_name', sa.String(length=100), nullable=True, comment='アカウント名'),
    sa.Column('email_address', sa.String(length=100), nullable=True, comment='メールアドレス'),
    sa.Column('account_status', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='ステータス:0：仮登録、1：本登録、2：削除'),
    sa.Column('is_system_manager', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='システム管理フラグ:アプリケーションで設定/更新しないこと'),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.String(length=200), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.String(length=200), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.String(length=200), nullable=True, comment='削除'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('m_insurances',
    sa.Column('insurance_id', sa.Integer(), nullable=False, comment='保険ID'),
    sa.Column('insurance_name', sa.String(length=200), nullable=True, comment='名前保険'),
    sa.PrimaryKeyConstraint('insurance_id')
    )
    op.create_table('m_makers',
    sa.Column('maker_id', sa.Integer(), nullable=False, comment='メーカーID'),
    sa.Column('maker_name', sa.String(length=200), nullable=True, comment='名前メーカー'),
    sa.PrimaryKeyConstraint('maker_id')
    )
    op.create_table('m_options',
    sa.Column('option_id', sa.Integer(), nullable=False, comment='オプションID'),
    sa.Column('option_name', sa.String(length=200), nullable=True, comment='名前オプション'),
    sa.PrimaryKeyConstraint('option_id')
    )
    op.create_table('m_payment_methods',
    sa.Column('payment_method_id', sa.Integer(), nullable=False, comment='保険ID'),
    sa.Column('payment_method_name', sa.String(length=200), nullable=True, comment='名前保険'),
    sa.PrimaryKeyConstraint('payment_method_id')
    )
    op.create_table('m_stores',
    sa.Column('store_id', sa.Integer(), nullable=False, comment='売上ID'),
    sa.Column('store_name', sa.String(length=200), nullable=True, comment='名前売上'),
    sa.PrimaryKeyConstraint('store_id')
    )
    op.create_table('m_vehicles',
    sa.Column('vehicle_id', sa.Integer(), nullable=False, comment='車両ID'),
    sa.Column('vehicle_name', sa.String(length=200), nullable=True, comment='名前車両'),
    sa.Column('maker_id', sa.Integer(), nullable=True, comment='メーカーID'),
    sa.Column('store_id', sa.Integer(), nullable=True, comment='売上ID'),
    sa.ForeignKeyConstraint(['maker_id'], ['m_makers.maker_id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['m_stores.store_id'], ),
    sa.PrimaryKeyConstraint('vehicle_id')
    )
    op.create_table('t_rental_orders',
    sa.Column('rental_orders_id', sa.Integer(), nullable=False, comment='発注明細ID:自動採番'),
    sa.Column('total_amount', sa.Float(), nullable=True, comment='合計'),
    sa.Column('payment_method_id', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('rental_status', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_accounts.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_accounts.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_accounts.account_id'], ),
    sa.ForeignKeyConstraint(['payment_method_id'], ['m_payment_methods.payment_method_id'], ),
    sa.PrimaryKeyConstraint('rental_orders_id')
    )
    op.create_table('t_rental_order_detail',
    sa.Column('rental_orders_detail_id', sa.Integer(), nullable=False, comment='発注明細ID:自動採番'),
    sa.Column('rental_order_id', sa.Integer(), nullable=False, comment='車両ID'),
    sa.Column('vehicle_id', sa.Integer(), nullable=False, comment='車両ID'),
    sa.Column('option_id', sa.Integer(), nullable=False, comment='車両ID'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='数量'),
    sa.Column('amount', sa.Float(), nullable=False, comment='小計'),
    sa.Column('retal_start_date', sa.DateTime(), nullable=False, comment='レンタル開始日'),
    sa.Column('retal_end_date', sa.DateTime(), nullable=False, comment='レンタル終了日'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', sa.Integer(), nullable=True, comment='削除者'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('False'), nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.ForeignKeyConstraint(['created_by'], ['m_accounts.account_id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['m_accounts.account_id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['m_accounts.account_id'], ),
    sa.ForeignKeyConstraint(['option_id'], ['m_options.option_id'], ),
    sa.ForeignKeyConstraint(['rental_order_id'], ['t_rental_orders.rental_orders_id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['m_vehicles.vehicle_id'], ),
    sa.PrimaryKeyConstraint('rental_orders_detail_id')
    )
    op.drop_constraint('m_account_base_ibfk_5', 'm_account_base', type_='foreignkey')
    op.drop_constraint('m_account_base_ibfk_3', 'm_account_base', type_='foreignkey')
    op.drop_constraint('m_account_base_ibfk_1', 'm_account_base', type_='foreignkey')
    op.drop_constraint('m_account_base_ibfk_4', 'm_account_base', type_='foreignkey')
    op.create_foreign_key(None, 'm_account_base', 'm_accounts', ['modified_by'], ['account_id'])
    op.create_foreign_key(None, 'm_account_base', 'm_accounts', ['deleted_by'], ['account_id'])
    op.create_foreign_key(None, 'm_account_base', 'm_accounts', ['account_id'], ['account_id'])
    op.create_foreign_key(None, 'm_account_base', 'm_accounts', ['created_by'], ['account_id'])
    op.drop_constraint('m_base_ibfk_2', 'm_base', type_='foreignkey')
    op.drop_constraint('m_base_ibfk_1', 'm_base', type_='foreignkey')
    op.drop_constraint('m_base_ibfk_3', 'm_base', type_='foreignkey')
    op.create_foreign_key(None, 'm_base', 'm_accounts', ['created_by'], ['account_id'])
    op.create_foreign_key(None, 'm_base', 'm_accounts', ['deleted_by'], ['account_id'])
    op.create_foreign_key(None, 'm_base', 'm_accounts', ['modified_by'], ['account_id'])
    op.drop_table('m_account')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'm_base', type_='foreignkey')
    op.drop_constraint(None, 'm_base', type_='foreignkey')
    op.drop_constraint(None, 'm_base', type_='foreignkey')
    op.create_foreign_key('m_base_ibfk_3', 'm_base', 'm_account', ['modified_by'], ['account_id'])
    op.create_foreign_key('m_base_ibfk_1', 'm_base', 'm_account', ['created_by'], ['account_id'])
    op.create_foreign_key('m_base_ibfk_2', 'm_base', 'm_account', ['deleted_by'], ['account_id'])
    op.drop_constraint(None, 'm_account_base', type_='foreignkey')
    op.drop_constraint(None, 'm_account_base', type_='foreignkey')
    op.drop_constraint(None, 'm_account_base', type_='foreignkey')
    op.drop_constraint(None, 'm_account_base', type_='foreignkey')
    op.create_foreign_key('m_account_base_ibfk_4', 'm_account_base', 'm_account', ['deleted_by'], ['account_id'])
    op.create_foreign_key('m_account_base_ibfk_1', 'm_account_base', 'm_account', ['account_id'], ['account_id'])
    op.create_foreign_key('m_account_base_ibfk_3', 'm_account_base', 'm_account', ['created_by'], ['account_id'])
    op.create_foreign_key('m_account_base_ibfk_5', 'm_account_base', 'm_account', ['modified_by'], ['account_id'])
    op.create_table('m_account',
    sa.Column('account_id', mysql.INTEGER(), autoincrement=True, nullable=False, comment='アカウントID'),
    sa.Column('account_cd', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='アカウントコード:社員番号など利用企業のIDやコードのため'),
    sa.Column('ext_account_id', mysql.INTEGER(), autoincrement=False, nullable=True, comment='外部アカウントID:cognitoなどの外部認証サービスと連携する場合は設定'),
    sa.Column('account_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='アカウント名'),
    sa.Column('email_address', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='メールアドレス'),
    sa.Column('account_status', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='ステータス:0：仮登録、1：本登録、2：削除'),
    sa.Column('is_system_manager', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='システム管理フラグ:アプリケーションで設定/更新しないこと'),
    sa.Column('version', mysql.INTEGER(), server_default=sa.text("'1'"), autoincrement=False, nullable=False, comment='バージョン:楽観的排他で利用'),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='作成日時:プログラムでは設定しない'),
    sa.Column('created_by', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=200), nullable=True, comment='作成処理:プログラムで設定、API名、関数名'),
    sa.Column('modified_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新日時:プログラムでは設定しない'),
    sa.Column('modified_by', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=200), nullable=True, comment='更新処理:プログラムで設定、API名、関数名'),
    sa.Column('deleted_at', mysql.DATETIME(), nullable=True, comment='削除日時'),
    sa.Column('deleted_by', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=200), nullable=True, comment='削除'),
    sa.Column('is_deleted', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False, comment='登録旗deleted: 0：消去未 ,1：消去済'),
    sa.PrimaryKeyConstraint('account_id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('t_rental_order_detail')
    op.drop_table('t_rental_orders')
    op.drop_table('m_vehicles')
    op.drop_table('m_stores')
    op.drop_table('m_payment_methods')
    op.drop_table('m_options')
    op.drop_table('m_makers')
    op.drop_table('m_insurances')
    op.drop_table('m_accounts')
    # ### end Alembic commands ###
